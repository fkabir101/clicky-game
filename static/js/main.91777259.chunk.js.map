{"version":3,"sources":["components/card/imageCard.js","components/initialCard.js","components/clicker.js","App.js","index.js"],"names":["ImageCard","props","react_default","a","createElement","className","id","src","image","alt","type","onClick","onValueChanged","InitialCard","class","Clicker","state","imageObject","score","highScore","firstLoad","componentWillMount","originalImage","JSON","parse","stringify","imageRref","_this","setState","event","target","clicked","tempObject","currentScore","i","length","j","Math","floor","random","_ref","alert","changeInitialLoad","_this2","this","map","imageCard","key","ref","initialCard","Component","App","clicker","ReactDOM","render","src_App","document","getElementById"],"mappings":"8NAaeA,MAXf,SAAmBC,GACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,oBAAoBC,GAAKL,EAAMK,IAC9CJ,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACfH,EAAAC,EAAAC,cAAA,OAAKG,IAAKN,EAAMO,MAAOC,IAAI,QAC3BP,EAAAC,EAAAC,cAAA,UAAQM,KAAK,SAASL,UAAU,4BAA4BM,QAASV,EAAMW,eAAgBN,GAAKL,EAAMK,IAAtG,YCOOO,MAZf,SAAsBZ,GACpB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,qBACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACfH,EAAAC,EAAAC,cAAA,MAAIU,MAAM,cAAV,eACAZ,EAAAC,EAAAC,cAAA,0GACAF,EAAAC,EAAAC,cAAA,UAAQM,KAAK,SAASL,UAAU,4BAA4BM,QAASV,EAAMW,gBAA3E,YCqESG,oNArEbC,MAAQ,CACNC,YAAc,GACdC,MAAO,EACPC,UAAW,EACXC,WAAY,KAEdC,mBAAqB,WACnB,IAAMC,EAAgBC,KAAKC,MAAMD,KAAKE,UAAUC,IAChDC,EAAKC,SAAS,CAACX,YAAcK,OAE/BV,eAAiB,SAACiB,GAChB,IAAuD,IAApDF,EAAKX,MAAMC,YAAYY,EAAMC,OAAOxB,IAAIyB,QAAkB,CAC3D,IAAIC,EAAaL,EAAKX,MAAMC,YACxBgB,EAAeN,EAAKX,MAAME,MAC9Be,IACAD,EAAWH,EAAMC,OAAOxB,IAAIyB,SAAU,EAEtC,IAAK,IAAIG,EAAIF,EAAWG,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC9C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADIM,EAEb,CAACR,EAAWI,GAAIJ,EAAWE,IAA3DF,EAAWE,GAFkCM,EAAA,GAE9BR,EAAWI,GAFmBI,EAAA,GAIhDb,EAAKC,SAAS,CAACX,YAAce,EAAYd,MAAQe,QAE/C,CACFQ,MAAM,6BACHd,EAAKX,MAAMG,UAAYQ,EAAKX,MAAME,OACnCS,EAAKC,SAAS,CAACT,UAAYQ,EAAKX,MAAME,QAExC,IAAMI,EAAgBC,KAAKC,MAAMD,KAAKE,UAAUC,IAChDC,EAAKC,SAAS,CAACX,YAAcK,EAAeJ,MAAQ,QAGxDwB,kBAAoB,WAClBf,EAAKC,SAAS,CAACR,WAAY,6EAIrB,IAAAuB,EAAAC,KACN,OAA4B,IAAzBA,KAAK5B,MAAMI,UAEVlB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WACfH,EAAAC,EAAAC,cAAA,oBAAYwC,KAAK5B,MAAME,OACvBhB,EAAAC,EAAAC,cAAA,yBAAiBwC,KAAK5B,MAAMG,WAC5BjB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WACduC,KAAK5B,MAAMC,YAAY4B,IAAI,SAAArC,GAAK,OAC/BN,EAAAC,EAAAC,cAAC0C,EAAD,CACEC,IAAKvC,EAAMF,GACXA,GAAIE,EAAMF,GACVE,MAAOA,EAAMwC,IACbpC,eAAgB+B,EAAK/B,qBAS7BV,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WACfH,EAAAC,EAAAC,cAAC6C,EAAD,CACErC,eAAgBgC,KAAKF,4BA9DXQ,cCKPC,mLANX,OACEjD,EAAAC,EAAAC,cAACgD,EAAD,aAHYF,aCClBG,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.91777259.chunk.js","sourcesContent":["import React from 'react'; \r\nimport './style.css';\r\nfunction ImageCard(props){\r\n  return(\r\n    <div className = \"card card-overide\" id ={props.id}>\r\n      <div className = \"card-body\">\r\n        <img src={props.image} alt=\"Cat\"/>\r\n        <button type=\"button\" className=\"btn btn-primary btn-large\" onClick={props.onValueChanged} id ={props.id}>Click</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageCard;","import React from 'react';\r\n\r\nfunction InitialCard (props){\r\n  return(\r\n    <div className = \"card card-overide\">\r\n    <div className = \"card-body\">\r\n      <h5 class=\"card-title\">Clicky Game</h5>\r\n      <p>Click on each card to score a point but don't click the same card twice or else its game over</p>\r\n      <button type=\"button\" className=\"btn btn-primary btn-large\" onClick={props.onValueChanged}>Start</button>\r\n    </div>\r\n  </div>\r\n  )\r\n} \r\n\r\nexport default InitialCard","import React, { Component } from 'react';\r\nimport imageRref from '../images/image-ref.json'\r\nimport ImageCard from './card/imageCard';\r\nimport InitialCard from './initialCard'\r\nimport './style.css'\r\n\r\nclass Clicker extends Component{\r\n\r\n  state = {\r\n    imageObject : {},\r\n    score: 0,\r\n    highScore: 0,\r\n    firstLoad : true\r\n  }\r\n  componentWillMount = () =>{\r\n    const originalImage = JSON.parse(JSON.stringify(imageRref));\r\n    this.setState({imageObject : originalImage})\r\n  }\r\n  onValueChanged = (event) => {\r\n    if(this.state.imageObject[event.target.id].clicked === false){\r\n      let tempObject = this.state.imageObject;\r\n      let currentScore = this.state.score\r\n      currentScore++\r\n      tempObject[event.target.id].clicked = true;\r\n      \r\n      for (let i = tempObject.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [tempObject[i], tempObject[j]] = [tempObject[j], tempObject[i]];\r\n      }\r\n      this.setState({imageObject : tempObject, score : currentScore})\r\n    }\r\n    else{\r\n      alert(\"Already Clicked Try again\")\r\n      if(this.state.highScore < this.state.score){\r\n        this.setState({highScore : this.state.score})\r\n      }\r\n      const originalImage = JSON.parse(JSON.stringify(imageRref));\r\n      this.setState({imageObject : originalImage, score : 0})\r\n    }\r\n  }\r\n  changeInitialLoad = () =>{\r\n    this.setState({firstLoad : false})\r\n  }\r\n\r\n\r\n  render(){\r\n    if(this.state.firstLoad === false){\r\n      return(\r\n        <div className = \"wrapper\">\r\n          <h4>Score: {this.state.score}</h4>\r\n          <h4>High Score: {this.state.highScore}</h4>\r\n          <div className = \"wrapper\">\r\n            {this.state.imageObject.map(image => (\r\n              <ImageCard\r\n                key={image.id}\r\n                id={image.id}\r\n                image={image.ref}\r\n                onValueChanged={this.onValueChanged}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <div className = \"wrapper\">\r\n          <InitialCard\r\n            onValueChanged={this.changeInitialLoad}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default Clicker","import React, { Component } from 'react';\nimport Clicker from \"./components/clicker\"\n\nclass App extends Component {\n  render() {\n    return (\n      <Clicker/>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}